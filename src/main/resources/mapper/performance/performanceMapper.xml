<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.profect.tickle.domain.performance.mapper.PerformanceMapper">

    <!-- 장르 목록 조회 -->
    <select id="findAllGenres" resultType="GenreDto">
        SELECT
            genre_id AS genreId,
            genre_title AS title
        FROM genre
    </select>

    <!-- 장르별 공연 조회  -->
    <select id="findPerformancesByGenre" resultType="PerformanceDto">
        SELECT
            p.performance_id AS performanceId,
            p.performance_title AS title,
            p.performance_date AS date,
        p.performance_img AS img
        FROM performance p
            JOIN status s ON p.status_id = s.status_id
        WHERE p.genre_id = #{genreId}
          AND s.status_code != 102
        ORDER BY p.performance_date ASC
            LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="countPerformancesByGenre" resultType="int">
        SELECT COUNT(*)
        FROM performance p
                 JOIN status s ON p.status_id = s.status_id
        WHERE p.genre_id = #{genreId}
          AND s.status_code != 102
    </select>

    <!--  장르별 인기랭킹 top10  -->
    <select id="findTop10ByGenre" resultType="PerformanceDto">
        SELECT
            p.performance_id AS performanceId,
            p.performance_title AS title,
            p.genre_id AS genreId,
            p.performance_date AS date,
            p.performance_img AS img
        FROM performance p
        JOIN status s ON p.status_id = s.status_id
        WHERE p.genre_id = #{genreId}
          AND s.status_code != 102
        ORDER BY p.performance_look_count DESC, p.performance_start_date ASC
            LIMIT 10
    </select>

    <!-- 모든 카테고리별 인기랭킹 top10   -->
    <select id="findTop10ByClickCount" resultType="PerformanceDto">
        SELECT
            p.performance_id AS performanceId,
            p.performance_title AS title,
            p.performance_date AS date,
        p.performance_img AS img
        FROM performance p
            JOIN status s ON p.status_id = s.status_id
        WHERE s.status_code != 102
        ORDER BY p.performance_look_count DESC, p.performance_start_date ASC
            LIMIT 10
    </select>

    <!--  공연별 정보 상세조회  -->
    <select id="findDetailById" parameterType="long"
            resultType="PerformanceDetailDto">
        SELECT
            p.performance_id AS performanceId,
            p.performance_title AS title,
            p.performance_img AS img,
            p.performance_date AS date,
        s.status_description AS statusDescription,
        p.performance_runtime AS runtime,
        p.performance_price AS price,
        h.hall_address AS hallAddress,
        m.host_biz_name AS hostBizName,
        p.performance_start_date AS startDate,
        p.performance_end_date AS endDate
        FROM performance p
            JOIN status s ON p.status_id = s.status_id
            JOIN hall h ON p.hall_id = h.hall_id
            JOIN member m ON p.member_id = m.member_id
        WHERE p.performance_id = #{performanceId}
          AND p.performance_deleted_at IS NULL
    </select>
    <!--  공연 상세조회시 카운트 증가  -->
    <update id="increaseLookCount">
        UPDATE performance
        SET performance_look_count = performance_look_count + 1
        WHERE performance_id = #{performanceId}
          AND performance_deleted_at IS NULL
    </update>


    <!-- 오픈예정 TOP4 -->
    <select id="findTop4UpcomingPerformances" resultType="PerformanceDto">
        SELECT
            p.performance_id AS performanceId,
            p.performance_title AS title,
            p.performance_date AS date,
        p.performance_img AS img
        FROM performance p
        WHERE p.performance_start_date > NOW()
        ORDER BY p.performance_start_date ASC, p.performance_date ASC
            LIMIT 4
    </select>

    <!--  공연 키워드로 검색  -->
    <select id="searchPerformancesByKeyword" resultType="PerformanceDto">
        SELECT
            p.performance_id AS performanceId,
            p.performance_title AS title,
            p.performance_date AS date,
        p.performance_img AS img
        FROM performance p
        WHERE p.performance_title ILIKE CONCAT('%', #{keyword}, '%')
        ORDER BY p.performance_date ASC
            LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="countPerformancesByKeyword" resultType="long">
        SELECT COUNT(*)
        FROM performance p
        WHERE p.performance_title ILIKE CONCAT('%', #{keyword}, '%')
    </select>

    <!--  관련공연 조회  -->
    <select id="findRelatedPerformances" resultType="com.profect.tickle.domain.performance.dto.response.PerformanceDto">
        SELECT
            p.performance_id AS performanceId,
            p.performance_title AS title,
            p.performance_date AS date,
            p.performance_img AS img
        FROM performance p
            JOIN status s ON p.status_id = s.status_id
        WHERE p.genre_id = #{genreId}
          AND p.performance_id != #{performanceId}
          AND s.status_code != 102
        ORDER BY p.performance_look_count DESC, p.performance_date ASC
            LIMIT 5
    </select>

    <select id="findGenreIdByPerformanceId" resultType="long">
        SELECT genre_id
        FROM performance
        WHERE performance_id = #{performanceId}
    </select>

    <select id="findPerformancesByMemberId" resultType="com.profect.tickle.domain.performance.dto.response.PerformanceHostDto">
        SELECT
            p.performance_id         AS performanceId,
            p.performance_title      AS title,
            p.performance_date       AS date,
            p.performance_img        AS img,
            s.status_description     AS statusDescription,
            p.performance_look_count AS lookCount,
            p.performance_created_at AS createdDate,
            p.performance_deleted_at AS deletedDate
        FROM performance p
            JOIN status s ON p.status_id = s.status_id
        WHERE p.member_id = #{memberId}
        ORDER BY p.performance_created_at DESC
    </select>


</mapper>
