<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.profect.tickle.domain.chat.mapper.ChatParticipantsMapper">

    <!-- 채팅방 참여자 목록 조회 (수정 버전) -->
    <select id="findParticipantsByRoomId" resultType="ChatParticipantsResponseDto">
        SELECT
            cp.chat_participants_id as id,                          -- ✅ alias 추가
            cp.chat_room_id as chatRoomId,                          -- ✅ alias 추가
            cp.member_id as memberId,                               -- ✅ alias 추가
            cp.chat_participants_joined_at as joinedAt,             -- ✅ alias 추가
            cp.chat_participants_status as status,                  -- ✅ alias 추가
            cp.chat_participants_last_read_at as lastReadAt,        -- ✅ alias 추가
            cp.chat_participants_last_read_message_id as lastReadMessageId, -- ✅ alias 추가

            -- 참여자 닉네임
            m.member_nickname as memberNickname,

            -- 읽지않은 메시지 개수
            (SELECT COUNT(*)
             FROM chat c
             WHERE c.chat_room_id = #{roomId}
               AND c.chat_id > CASE 
                 WHEN cp.chat_participants_last_read_message_id > 1000000000000 THEN 0  -- 타임스탬프인 경우 0으로 처리
                 ELSE COALESCE(cp.chat_participants_last_read_message_id, 0)
               END
               AND c.chat_is_deleted = false) as unreadMessageCount

        FROM chat_participants cp
                 INNER JOIN member m ON cp.member_id = m.member_id
        WHERE cp.chat_room_id = #{roomId}
          AND cp.chat_participants_status = true
        ORDER BY cp.chat_participants_joined_at ASC
    </select>

    <!-- 읽음 상태 업데이트 -->
    <update id="updateLastReadMessage">
        UPDATE chat_participants
        SET
            chat_participants_last_read_message_id = #{messageId},
            chat_participants_last_read_at = #{readAt}
        WHERE chat_room_id = #{roomId}
          AND member_id = #{memberId}
          AND chat_participants_status = true
    </update>

    <!-- 사용자의 읽음 상태 조회 -->
    <select id="getReadStatus" resultType="UnreadCountResponseDto">
        SELECT
            COALESCE(
                    (SELECT COUNT(*)
                     FROM chat c
                     WHERE c.chat_room_id = #{roomId}
                       AND c.chat_id > COALESCE(cp.chat_participants_last_read_message_id, 0)
                       AND c.chat_is_deleted = false
                       AND c.member_id != #{memberId}), 0  -- ✅ 내가 보낸 메시지 제외
            ) as unread_count,
            cp.chat_participants_last_read_message_id,
            cp.chat_participants_last_read_at
        FROM chat_participants cp
        WHERE cp.chat_room_id = #{roomId}
          AND cp.member_id = #{memberId}
          AND cp.chat_participants_status = true
    </select>

    <!-- 채팅방 참여자 수 조회 -->
    <select id="countActiveParticipants" resultType="int">
        SELECT COUNT(*)
        FROM chat_participants cp
        WHERE cp.chat_room_id = #{roomId}
          AND cp.chat_participants_status = true
    </select>

    <!-- 사용자가 참여 중인 채팅방 목록 조회 (완전 수정 버전) -->
    <select id="findMyChatRooms" resultType="ChatParticipantsResponseDto">
        SELECT
            cp.chat_participants_id as id,
            cp.chat_room_id as chatRoomId,
            cp.member_id as memberId,
            cp.chat_participants_joined_at as joinedAt,
            cp.chat_participants_status as status,
            cp.chat_participants_last_read_at as lastReadAt,
            cp.chat_participants_last_read_message_id as lastReadMessageId,

            -- ✅ 자기 자신의 닉네임 표시 (수정)
            m.member_nickname as memberNickname,

            -- 읽지않은 메시지 개수
            (SELECT COUNT(*)
             FROM chat c
             WHERE c.chat_room_id = cp.chat_room_id
               AND c.chat_id > COALESCE(cp.chat_participants_last_read_message_id, 0)
               AND c.chat_is_deleted = false
               AND c.member_id != #{memberId}) as unreadMessageCount  -- ✅ 내가 보낸 메시지 제외

        FROM chat_participants cp
                 INNER JOIN chat_room cr ON cp.chat_room_id = cr.chat_room_id
                 INNER JOIN member m ON cp.member_id = m.member_id  -- ✅ INNER JOIN으로 변경
        WHERE cp.member_id = #{memberId}
          AND cp.chat_participants_status = true
          AND cr.chat_room_status = true
        ORDER BY
            -- 읽지않은 메시지가 있는 채팅방을 먼저 정렬
            (CASE WHEN (SELECT COUNT(*)
                        FROM chat c
                        WHERE c.chat_room_id = cp.chat_room_id
                          AND c.chat_id > COALESCE(cp.chat_participants_last_read_message_id, 0)
                          AND c.chat_is_deleted = false
                          AND c.member_id != #{memberId}) > 0 THEN 0 ELSE 1 END),  -- ✅ 내가 보낸 메시지 제외
            cr.chat_room_updated_at DESC
    </select>


    <!-- 참여 여부 확인 -->
    <select id="isParticipant" resultType="boolean">
        SELECT
            CASE WHEN COUNT(*) > 0 THEN true ELSE false END
        FROM chat_participants cp
        WHERE cp.chat_room_id = #{chatRoomId}
          AND cp.member_id = #{memberId}
          AND cp.chat_participants_status = true
    </select>

</mapper>
