<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.profect.tickle.domain.chat.mapper.ChatMessageMapper">

    <!-- 채팅방 메시지 목록 조회 (페이징) -->
    <select id="findMessagesByRoomId" resultType="ChatMessageResponseDto">
        SELECT
            c.chat_id as id,                    -- ✅ 중요: alias 추가
            c.chat_room_id as chatRoomId,
            c.member_id as memberId,
            c.chat_message_type as messageType, -- ✅ 중요: alias 추가
            CASE
                WHEN c.chat_is_deleted = true THEN '삭제된 메시지입니다'
                ELSE c.chat_content
                END as content,                 -- ✅ 삭제된 메시지 처리
            c.chat_created_at as createdAt,     -- ✅ 중요: alias 추가
            c.chat_sender_status as senderStatus,
            c.chat_file_path as filePath,
            c.chat_file_name as fileName,
            c.chat_file_size as fileSize,
            c.chat_file_type as fileType,
            c.chat_is_deleted as isDeleted,     -- ✅ 삭제 상태 추가

            CASE
                WHEN c.chat_sender_status = false THEN '탈퇴한 회원입니다'
                WHEN m.member_id IS NULL THEN '탈퇴한 회원입니다'
                ELSE m.member_nickname
                END as senderNickname,

            CASE
                WHEN c.member_id = #{currentMemberId} THEN true
                ELSE false
                END as isMyMessage

        FROM chat c
                 LEFT JOIN member m ON c.member_id = m.member_id
        WHERE c.chat_room_id = #{roomId}
          <if test="lastMessageId != null">
              AND c.chat_id &lt; #{lastMessageId}
          </if>
        ORDER BY c.chat_created_at DESC
            LIMIT #{size} OFFSET #{offset}
    </select>

    <!-- 채팅방 전체 메시지 개수 조회 -->
    <select id="countTotalMessages" resultType="int">
        SELECT COUNT(*)
        FROM chat c
        WHERE c.chat_room_id = #{roomId}

        <if test="lastMessageId != null">
            AND c.chat_id &lt; #{lastMessageId}
        </if>
    </select>

    <!-- 읽지않은 메시지 개수 조회 -->
    <select id="countUnreadMessages" resultType="int">
        SELECT COUNT(*)
        FROM chat c
        WHERE c.chat_room_id = #{roomId}
          AND c.chat_is_deleted = false
          AND c.chat_id > COALESCE(#{lastReadMessageId}, 0)
          AND c.member_id != #{currentMemberId}  -- ✅ 내가 보낸 메시지 제외
    </select>

    <!-- 채팅방의 마지막 메시지 조회 (완전 수정 버전) -->
    <select id="findLastMessageByRoomId" resultType="ChatMessageResponseDto">
        SELECT
            c.chat_id as id,
            c.chat_room_id as chatRoomId,
            c.member_id as memberId,
            c.chat_message_type as messageType,
            CASE
                WHEN c.chat_is_deleted = true THEN '삭제된 메시지입니다'
                ELSE c.chat_content
                END as content,
            c.chat_created_at as createdAt,
            c.chat_sender_status as senderStatus,
            c.chat_file_path as filePath,
            c.chat_file_name as fileName,
            c.chat_file_size as fileSize,
            c.chat_file_type as fileType,
            c.chat_is_deleted as isDeleted,     -- ✅ 삭제 상태 추가

            -- 발신자 닉네임
            CASE
                WHEN c.chat_sender_status = false THEN '탈퇴한 회원입니다'
                WHEN m.member_id IS NULL THEN '탈퇴한 회원입니다'
                ELSE m.member_nickname
                END as senderNickname,

            -- ✅ isMyMessage 계산 추가
            CASE
                WHEN c.member_id = #{currentMemberId} THEN true
                ELSE false
                END as isMyMessage

        FROM chat c
                 LEFT JOIN member m ON c.member_id = m.member_id
        WHERE c.chat_room_id = #{roomId}
        ORDER BY c.chat_created_at DESC
            LIMIT 1
    </select>
</mapper>
