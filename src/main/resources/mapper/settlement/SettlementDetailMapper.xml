<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.profect.tickle.domain.settlement.mapper.SettlementDetailMapper">

    <!-- 건별 정산에 사용될 데이터 집합 추출 -->
    <select id="findTargetReservations" resultType="com.profect.tickle.domain.settlement.dto.batch.SettlementDetailFindTargetDto">
        SELECT
            -- 필요한 값 우선 추출 후 java에서 비즈니스 로직 통해 연산 처리
            -- 성능 부하 시 쿼리 내에서 연산 후 java에서 insert만 처리하도록 변경 예정
            m.host_biz_name AS hostBizName,
            p.performance_title AS performanceTitle,
            p.performance_end_date AS performanceEndDate,
            r.reservation_code AS reservationCode,
            r.reservation_price AS reservationPrice,
            sr.status_code AS reservationStatusCode,
            c.contract_charge AS contractCharge
        FROM reservation r
        JOIN performance p ON r.performance_id = p.performance_id
        JOIN member m ON p.member_id = m.member_id
        JOIN contract c ON m.member_id = c.member_id
        JOIN status sr ON r.status_id = sr.status_id
        JOIN status sp ON p.status_id = sp.status_id
        -- 예매내역 테이블의 마지막 업데이트 시점 > 건별정산 테이블의 마지막 배치 시점
        -- 예매내역 테이블의 상태가 결제, 취소인 건 모두
        -- 공연 테이블의 상태가 '공연예정'인 건
        -- 세가지 조건에 부합하는 데이터 집합 우선 추출
        WHERE (CASE
                  WHEN r.reservation_updated_at IS NULL
                      THEN r.reservation_created_at
                  ELSE r.reservation_updated_at
               END)
         &gt; (
                SELECT COALESCE(MAX(settlement_detail_created_at), '1970-01-01'::TIMESTAMP)
                FROM settlement_detail
            )
            AND NOW() BETWEEN p.performance_start_date
                        AND p.performance_end_date
            AND sr.status_code IN (102, 103)
            AND sp.status_code = 100
    </select>

    <!-- 건별 정산 insert -->
    <insert id="insertSettlementDetail" parameterType="com.profect.tickle.domain.settlement.dto.batch.SettlementDetailDto">
        INSERT INTO settlement_detail (
            status_id,
            host_biz_name,
            performance_title,
            performance_end_date,
            reservation_code,
            settlement_detail_created_at,
            settlement_detail_sales_amount,
            settlement_detail_refund_amount,
            settlement_detail_gross_amount,
            settlement_detail_commission,
            settlement_detail_net_amount
        ) VALUES (
            #{statusId},
            #{hostBizName},
            #{performanceTitle},
            #{performanceEndDate},
            #{reservationCode},
            #{createdAt},
            #{salesAmount},
            #{refundAmount},
            #{grossAmount},
            #{commission},
            #{netAmount}
        )
    </insert>

    <!-- 건별정산 정산 집계 N > Y 업데이트 -->
    <update id="updateSettlementDetail" parameterType="java.time.LocalDateTime">
        UPDATE settlement_detail
        SET settled_flag = 'Y'
        WHERE performance_end_date &lt; #{now}
        AND settled_flag = 'N'
    </update>
</mapper>