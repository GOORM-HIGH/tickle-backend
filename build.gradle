plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.hibernate.orm' version '6.6.22.Final'
    id 'org.graalvm.buildtools.native' version '0.10.6'
}

group = 'com.profect'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    poiVersion = '5.2.4'
    xmlbeansVersion = '5.1.1'
}

dependencies {
    // ===== Core Spring Boot =====
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    testImplementation 'org.springframework.security:spring-security-test'

    // ===== Database =====
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'com.h2database:h2'

    // ===== MyBatis=====
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
    implementation 'org.mybatis:mybatis:3.5.19'

    // ===== API Documentation (Swagger-ui) =====
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'

    // ===== Development Tools =====
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // ===== Annotation Processing =====
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // ===== Test Dependencies =====
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // ===== Jwt Dependencies =====
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // ===== WebSocket =====
    implementation 'org.springframework:spring-websocket'
    implementation 'org.springframework:spring-messaging'

    // ==== Payment ====
    implementation 'io.github.bootpay:backend:+'

    // ==== thymeleaf ====
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // WebDAV 의존성
    implementation 'com.github.lookfirst:sardine:5.10'

    // @PostConstruct 어노테이션
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    // Jakarta JAXB (Spring Boot 3.x용)
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:3.0.1'
    implementation 'org.glassfish.jaxb:jaxb-runtime:3.0.2'

    // 구 버전 JAXB (sardine 라이브러리용)
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.8'

    // 엑셀 다운로드
    implementation "org.apache.poi:poi:${poiVersion}"
    implementation "org.apache.poi:poi-ooxml:${poiVersion}"
    implementation "org.apache.xmlbeans:xmlbeans:${xmlbeansVersion}"
}

hibernate {
    enhancement {
        enableAssociationManagement = true
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
